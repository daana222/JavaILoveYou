/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Sales_Manager;

import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Kaushaliya
 */
public class Daily_Items_Sales_Entry extends javax.swing.JFrame {
    private static final String DATE_FORMAT = "dd/MM/yyyy"; // Define expected date format



    /**
     * Creates new form Daily_Items_Sales_Entry
     */
    public Daily_Items_Sales_Entry() {
        initComponents();
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tableRowClicked(evt);
        }
    });
    }
    
    private void tableRowClicked(java.awt.event.MouseEvent evt) {
    int selectedRow = jTable1.getSelectedRow(); // Get the index of the selected row

    if (selectedRow != -1) { // Ensure a valid row is selected
        jTextPane3.setText(jTable1.getValueAt(selectedRow, 0).toString()); // Date
        jTextPane2.setText(jTable1.getValueAt(selectedRow, 1).toString()); // Item ID
        jTextPane1.setText(jTable1.getValueAt(selectedRow, 2).toString()); // Item Name
        jTextPane4.setText(jTable1.getValueAt(selectedRow, 3).toString()); // Quantity Sold
        jTextField1.setText(jTable1.getValueAt(selectedRow, 4).toString()); // Unit Price
        jTextField2.setText(jTable1.getValueAt(selectedRow, 6).toString()); // Current Stock
        jTextField3.setText(jTable1.getValueAt(selectedRow, 7).toString()); // Reorder Level
    }
}

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 0, 153));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sales Manager");

        jButton7.setBackground(new java.awt.Color(255, 255, 204));
        jButton7.setLabel("Dashboard");
        jButton7.setName("btnDashboard1"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton1.setText("List of Items");
        jButton1.setName("btnListofItems2"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Daily Item Sales Entry");
        jButton2.setName("btnDailyItemSalesEntry2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sales Report");
        jButton3.setName("btnSalesReport2"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Stock Level");
        jButton4.setName("btnStockLevel2"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Create Requisiton");
        jButton5.setName("btnCreateRequisition2"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("List of PO");
        jButton6.setName("btnListofPO2"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(30, 30, 30)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Item ID", "Item Name", "Quantity Sold", "Unit Price", "Total Sales", "Current Stock", "Reorder Level"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextPane1.setName("txtItemName"); // NOI18N
        jScrollPane2.setViewportView(jTextPane1);

        jLabel1.setText("Item Name:");

        jLabel3.setText("Item ID:");

        jTextPane2.setName("txtItemCode1"); // NOI18N
        jScrollPane3.setViewportView(jTextPane2);

        jLabel4.setText("Date:");

        jTextPane3.setName("txtDate"); // NOI18N
        jScrollPane4.setViewportView(jTextPane3);

        jLabel5.setText("Quantity Sold:");

        jTextPane4.setName("txtQuantitySold"); // NOI18N
        jScrollPane5.setViewportView(jTextPane4);

        jButton8.setText("Add");
        jButton8.setName("btnAdd"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setLabel("Edit");
        jButton9.setName("btnEdit"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Delete");
        jButton10.setName("btnDlelete"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton12.setText("Generate");
        jButton12.setName("btnGenerate2"); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel6.setText("Unit Price:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton12)
                        .addGap(31, 31, 31)
                        .addComponent(jButton8)
                        .addGap(33, 33, 33)
                        .addComponent(jButton9)
                        .addGap(32, 32, 32)
                        .addComponent(jButton10)
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );

        jLabel7.setText("Current Stock:");

        jLabel8.setText("Reorder Level:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(384, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Main_Dashboard maindashboardFrame = new Main_Dashboard();
        maindashboardFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List_Of_Items listofitemsFrame = new List_Of_Items();
        listofitemsFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Daily_Items_Sales_Entry dailyitemsalesentryFrame = new Daily_Items_Sales_Entry();
        dailyitemsalesentryFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Stock_Level stocklevelFrame = new Stock_Level();
        stocklevelFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Sales_Report salesreportFrame = new Sales_Report();
        salesreportFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Create_Requisition createrequisitionFrame = new Create_Requisition();
        createrequisitionFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        List_Po listpoFrame = new List_Po();
        listpoFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear the table

    try (
        BufferedReader salesReader = new BufferedReader(new FileReader("sales.txt"));
        BufferedReader stockReader = new BufferedReader(new FileReader("stocklevel.txt"))
    ) {
        // Load stock data into a map for quick access
        Map<String, String[]> stockDataMap = new HashMap<>();
        String stockLine;

        // Skip header in stocklevel.txt
        stockReader.readLine(); // Skip the header
        while ((stockLine = stockReader.readLine()) != null) {
            String[] stockParts = stockLine.split(",");
            if (stockParts.length >= 5) { // Ensure valid row
                String itemId = stockParts[0];
                stockDataMap.put(itemId, stockParts);
            }
        }

        // Read sales data and match with stock data
        String salesLine;

        // Skip header in sales.txt
        salesReader.readLine(); // Skip the header
        while ((salesLine = salesReader.readLine()) != null) {
            String[] salesParts = salesLine.split(",");
            if (salesParts.length >= 6) { // Ensure valid row
                String date = salesParts[0];
                String itemId = salesParts[1];
                String itemName = salesParts[2];
                String quantitySold = salesParts[3];
                String unitPrice = salesParts[4];
                String totalSales = salesParts[5];

                // Get stock data for the item
                String[] stockData = stockDataMap.get(itemId);
                String currentStock = (stockData != null) ? stockData[2] : "N/A"; // Default to "N/A" if not found
                String reorderLevel = (stockData != null) ? stockData[3] : "N/A";

                // Add row to table
                model.insertRow(0, new Object[]{date, itemId, itemName, quantitySold, unitPrice, totalSales, currentStock, reorderLevel});
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading files: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
          String date = jTextPane3.getText().trim();
    String itemId = jTextPane2.getText().trim();
    String itemName = jTextPane1.getText().trim();
    String quantitySold = jTextPane4.getText().trim();
    String unitPrice = jTextField1.getText().trim();
    String currentStock = jTextField2.getText().trim();
    String reorderLevel = jTextField3.getText().trim();

    if (date.isEmpty() || itemId.isEmpty() || itemName.isEmpty() || quantitySold.isEmpty() || unitPrice.isEmpty() || currentStock.isEmpty() || reorderLevel.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled.", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (!isValidDate(date)) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Please use dd/MM/yyyy.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int qtySold = Integer.parseInt(quantitySold);
        double price = Double.parseDouble(unitPrice.replace("RM", "").trim()); // Remove RM before parsing
        int stock = Integer.parseInt(currentStock);
        int reorder = Integer.parseInt(reorderLevel);
        double totalSales = qtySold * price;

        // Reduce the current stock by the quantity sold
        int updatedStock = stock - qtySold;

        if (updatedStock < 0) {
            JOptionPane.showMessageDialog(this, "Quantity sold exceeds current stock.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Insert at the top of the table with RM formatting
        model.insertRow(0, new Object[]{date, itemId, itemName, qtySold, "RM" + String.format("%.2f", price), "RM" + String.format("%.2f", totalSales), updatedStock, reorder});

        saveDataToFiles();

        // Clear the input fields after a successful entry
        jTextPane3.setText(""); // Clear date
        jTextPane2.setText(""); // Clear item ID
        jTextPane1.setText(""); // Clear item name
        jTextPane4.setText(""); // Clear quantity sold
        jTextField1.setText(""); // Clear unit price
        jTextField2.setText(""); // Clear current stock
        jTextField3.setText(""); // Clear reorder level

        JOptionPane.showMessageDialog(this, "Entry added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid number format for Quantity, Unit Price, Current Stock, or Reorder Level.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int selectedRow = jTable1.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to edit.", "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Get existing values from the table
    String originalQuantitySold = String.valueOf(jTable1.getValueAt(selectedRow, 3));
    String originalCurrentStock = String.valueOf(jTable1.getValueAt(selectedRow, 6));

    // Get new input values
    String newDate = jTextPane3.getText().trim();
    String newItemId = jTextPane2.getText().trim();
    String newItemName = jTextPane1.getText().trim();
    String newQuantitySold = jTextPane4.getText().trim();
    String newUnitPrice = jTextField1.getText().trim();
    String newCurrentStock = jTextField2.getText().trim();
    String newReorderLevel = jTextField3.getText().trim();

    // Validate input fields
    if (newDate.isEmpty() || newItemId.isEmpty() || newItemName.isEmpty() || newQuantitySold.isEmpty() ||
        newUnitPrice.isEmpty() || newCurrentStock.isEmpty() || newReorderLevel.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields must be filled.", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (!isValidDate(newDate)) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Please use dd/MM/yyyy.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int qtySold = Integer.parseInt(newQuantitySold);
        double price = Double.parseDouble(newUnitPrice.replace("RM", "").trim()); // Remove RM before parsing
        int currentStock = Integer.parseInt(newCurrentStock);
        int reorderLevel = Integer.parseInt(newReorderLevel);

        // Check if Quantity Sold or Current Stock has been changed
        boolean isQuantitySoldModified = !newQuantitySold.equals(originalQuantitySold);
        boolean isCurrentStockModified = !newCurrentStock.equals(originalCurrentStock);

        if (isQuantitySoldModified || isCurrentStockModified) {
            // If Quantity Sold or Current Stock is modified, validate stock level
            if (qtySold > currentStock) {
                JOptionPane.showMessageDialog(this, "Quantity sold exceeds current stock.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Adjust stock level only if these fields are modified
            currentStock -= qtySold;
        }

        double totalSales = qtySold * price;

        // Update table values with RM formatting
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setValueAt(newDate, selectedRow, 0);
        model.setValueAt(newItemId, selectedRow, 1);
        model.setValueAt(newItemName, selectedRow, 2);
        model.setValueAt(qtySold, selectedRow, 3);
        model.setValueAt("RM" + String.format("%.2f", price), selectedRow, 4); // Add RM format to unit price
        model.setValueAt("RM" + String.format("%.2f", totalSales), selectedRow, 5); // Add RM format to total sales
        model.setValueAt(currentStock, selectedRow, 6);
        model.setValueAt(reorderLevel, selectedRow, 7);

        // Save updated data to files
        saveDataToFiles();
        JOptionPane.showMessageDialog(this, "Entry edited successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear input fields
        jTextPane3.setText("");
        jTextPane2.setText("");
        jTextPane1.setText("");
        jTextPane4.setText("");
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid number format for Quantity Sold, Unit Price, Current Stock, or Reorder Level.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton9ActionPerformed

    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int selectedRow = jTable1.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.removeRow(selectedRow);

    // Save updated data to files
    saveDataToFiles();
    JOptionPane.showMessageDialog(this, "Entry deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

    // Clear input fields
    jTextPane3.setText("");
    jTextPane2.setText("");
    jTextPane1.setText("");
    jTextPane4.setText("");
    jTextField1.setText("");
    jTextField2.setText("");
    jTextField3.setText("");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void saveDataToFiles() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    try (
        BufferedWriter salesWriter = new BufferedWriter(new FileWriter("sales.txt"));
        BufferedWriter stockWriter = new BufferedWriter(new FileWriter("stocklevel.txt"))
    ) {
        // Write headers to both files
        salesWriter.write("Date,ItemID,Item Name,Quantity Sold,Unit Price,Total Sales\n");
        stockWriter.write("ItemID,Item Name,Current Stock Level,Reorder Level,Last Updated Date\n");

        for (int i = 0; i < model.getRowCount(); i++) {
            Object date = model.getValueAt(i, 0);
            Object itemId = model.getValueAt(i, 1);
            Object itemName = model.getValueAt(i, 2);
            Object quantitySold = model.getValueAt(i, 3);
            Object unitPrice = model.getValueAt(i, 4);
            Object totalSales = model.getValueAt(i, 5);
            Object currentStock = model.getValueAt(i, 6);
            Object reorderLevel = model.getValueAt(i, 7);

            // Ensure null values are not written
            if (date != null && itemId != null && itemName != null && quantitySold != null && unitPrice != null && totalSales != null) {
                String salesData = date + "," + itemId + "," + itemName + "," + quantitySold + "," + unitPrice + "," + totalSales;
                salesWriter.write(salesData + "\n");
            }

            if (itemId != null && itemName != null && currentStock != null && reorderLevel != null) {
                String stockData = itemId + "," + itemName + "," + currentStock + "," + reorderLevel + "," + date;
                stockWriter.write(stockData + "\n");
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving data to files: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    

    
    private boolean isValidDate(String date) {
    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
    sdf.setLenient(false); // Ensures strict date parsing
    try {
        sdf.parse(date); // Attempt to parse the date
        return true;
    } catch (ParseException e) {
        return false; // Return false if parsing fails
    }
}
  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Daily_Items_Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Daily_Items_Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Daily_Items_Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Daily_Items_Sales_Entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Daily_Items_Sales_Entry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    // End of variables declaration//GEN-END:variables
}
